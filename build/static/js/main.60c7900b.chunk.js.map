{"version":3,"sources":["libs/Processor.js","utils/useWindowDimensions.js","components/View.js","components/Select.js","components/WindowInterval.js","components/Range.js","components/DataSets.js","components/InitInputGroup.js","components/RangeInterval.js","components/Stats.js","components/Home.js","index.js"],"names":["module","exports","string","Matrix","STRING","Head","CurrentIndex","getHead","split","filter","e","trim","length","getBody","body","slice","temp","i","push","setData","query","head","matrix","queryString","var_index","indexOf","console","log","exposeIndex","incrementIndex","getWindowDimensions","window","width","innerWidth","height","innerHeight","createOptions","showLine","xLabelName","darkMode","fileName","fontColor","gridColor","title","display","text","fontSize","legend","labels","animation","duration","showLines","scales","xAxes","scaleLabel","labelString","gridLines","drawOnChartArea","drawTicks","color","ticks","autoSkip","maxTicksLimit","yAxes","responsive","createDataSet","array","select","states","rangeObj","theme","start","end","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","View","props","useState","options","ready","_data","windowHeight","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","className","id","Select","ops","setOptions","status","variables","defaultValue","onChange","document","getElementById","selectedVar","selectedIndex","setSelect","value","disabled","map","item","key","name","WindowInterval","React","forwardRef","ref","range","Object","values","maxValue","setRange","dataReady","evaluateAndUpdate","lb","up","max","cb","type","min","placeholder","upperBound","Number","target","Range","slideMax","dataArrayLength","intervalRef","useRef","dataObj","leftIndex","rightIndex","current","children","DataSection","index","currentDataset","dataSets","setFileName","setArray","availableFiles","fileObj","InitInputGroup","changeTheme","darkTheme","transition","documentElement","setAttribute","setColorTheme","classList","add","setTimeout","remove","onClick","hidden","handleUpload","autoComplete","htmlFor","Slider","RangeInterval","allowCross","lower","upper","Mean","Variance","Stats","mean","targetArray","star","reduce","a","b","toFixed","num","count","n","toCustomFit","LocalMean","elem","Math","pow","variance","dataUtils","require","Home","_dataObj","_select","_array","_range","_darkMode","setMode","_datasets","setDatasets","_dataSetNames","setDataSetNames","_currFileName","fileToLoad","files","reader","FileReader","onload","ev","result","concat","readAsText","App","ReactDOM","render"],"mappings":"mLA6DAA,EAAOC,QA7DP,SAAmBC,GACf,IAEIC,EAFAC,EAAO,OACPC,EAAO,OAEPC,EAAe,EA+CnB,MAAO,CACHC,QAlCY,WAAoB,IAAnBL,EAAkB,uDAAXE,EAEpB,OADAC,EAAOH,EAAOM,MAAM,MAAM,GAAGA,MAAM,SAASC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,OAAOC,OAAO,MAkCxEC,QA9BY,WAIZ,IAJgC,IAAnBX,EAAkB,uDAAXE,EAEhBU,EAAOZ,EAAOM,MAAM,MAAMO,MAAM,GAChCC,EAAK,GACDC,EAAE,EAAGA,EAAEH,EAAKF,OAAQK,IACxBD,EAAKE,KAAKJ,EAAKG,GAAGT,MAAM,SAASC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,OAAOC,OAAO,MAGjE,OADAT,EAASa,EACFA,GAuBPG,QAhDY,SAACjB,GACbE,EAASF,GAgDTkB,MArBU,WAA4C,IAA3CC,EAA0C,uDAArChB,EAAMiB,EAA+B,uDAAxBnB,EAAQoB,EAAgB,uCAEjDC,EAAYH,EAAKI,QAAQF,GAC7B,IAAkB,IAAfC,EAAH,CAMA,IADA,IAAIR,EAAO,GACHC,EAAE,EAAGA,EAAEK,EAAOV,OAAQK,IAC1BD,EAAKE,KAAKI,EAAOL,GAAGO,IAGxB,OAAOR,EATHU,QAAQC,IAAI,cAkBhBC,YA9CgB,WAChB,OAAOtB,GA8CPuB,eA3CmB,WACnBvB,GAAc,M,4FCbtB,SAASwB,IAAsB,IAAD,EACyBC,OACnD,MAAM,CACFC,MAHsB,EAClBC,WAGJC,OAJsB,EACCC,a,aCsC/B,SAASC,EAAcC,EAAUC,EAAYC,EAAUC,GAEnD,IAAIC,EAAYF,EAAW,QAAU,OAC/BG,EAAYH,EAAW,UAAY,UACzC,MAAO,CACHI,MAAM,CACFC,SAAS,EACTC,KAAML,EACNC,UAAWA,EACXK,SAAU,IAEdC,OAAO,CACHC,OAAO,CACHP,UAAWA,IAGnBQ,UAAU,CACNC,SAAU,GAEdC,UAAWd,EACXe,OAAQ,CACJC,MAAO,CAAC,CACJC,WAAY,CACRV,SAAS,EACTW,YAAajB,EACbQ,SAAU,GACVL,UAAWA,GAEfe,UAAY,CACRC,iBAAgB,EAChBC,WAAW,EACXC,MAAOjB,GAEXkB,MAAO,CACHC,UAAU,EACVC,cAAe,GACfrB,UAAWA,KAGnBsB,MAAO,CAAC,CACJP,UAAW,CACPC,iBAAgB,EAChBC,WAAW,EACXC,MAAOjB,GAEXkB,MAAO,CACHnB,UAAWA,MAIvBuB,YAAY,GAIpB,SAASC,EAAcC,EAAOC,EAAQ9C,EAAM+C,EAAQC,EAAU9B,GAC1D,IAEM+B,EAAQ/B,EAFI,CAAC,sBAAuB,wBAAyB,qBAChD,CAAC,qBAAsB,2BAA4B,qBA6BtE,MA1Ba,CACTS,OAAQoB,EAAOrD,MAAMsD,EAASE,MAAMF,EAASG,KAC7CC,SAAU,CACN,CACIC,MAAOP,EACPQ,MAAM,EACNC,YAAa,GACbC,gBAAiB,UACjBC,YAAaR,EAAM,GACnBS,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkBb,EAAM,GACxBc,qBAAsBd,EAAM,GAC5Be,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2BjB,EAAM,GACjCkB,sBAAuBlB,EAAM,GAC7BmB,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBC,KAAM1B,EAAMnD,MAAMsD,EAASE,MAAMF,EAASG,QAO3CqB,MArHf,SAAcC,GAAM,MAISC,mBAAS,CAACH,KAAK,GAAII,QAAQ,GAAIC,OAAM,IAJ9C,mBAITC,EAJS,KAIF/E,EAJE,KAOVgF,EDTK,WAA+B,IAAD,EACOJ,mBAASjE,KADhB,mBAClCsE,EADkC,KAChBC,EADgB,KAYzC,OATAC,qBAAU,WACN,SAASC,IACTF,EAAoBvE,KAIpB,OADAC,OAAOyE,iBAAiB,SAAUD,GAC3B,kBAAMxE,OAAO0E,oBAAoB,SAAUF,MACnD,IAEIH,ECHcM,GAAsBxE,OAW3C,OARAoE,qBAAU,WACNnF,EAAQ,CACJyE,KAAM3B,EAAc6B,EAAM5B,MAAM0B,KAAME,EAAM3B,OAAQ2B,EAAMzE,KAAMyE,EAAM5B,MAAME,OAAQ0B,EAAMzB,SAAUyB,EAAMvD,UAC1GyD,QAAS5D,GAAc,EAAM,aAAc0D,EAAMvD,SAAUuD,EAAMtD,UACjEyD,MAAOH,EAAM5B,MAAM+B,UAEzB,CAACH,EAAM5B,MAAO4B,EAAMzB,WAGlB,yBAAKsC,UAAU,OAAOC,GAAG,aACpBV,EAAMD,MACH,kBAAC,IAAD,CAAM/D,OAAQiE,EAAa,EAAGS,GAAG,aAAahB,KAAMM,EAAMN,KAAMI,QAASE,EAAMF,UAE/E,yBAAKY,GAAG,gBAAR,IAAwB,6DAAmCd,EAAMtD,UAAjE,OCCDqE,MAlCf,SAAgBf,GAAO,IAAD,EACQC,mBAAS,CAAC,YADlB,mBACXe,EADW,KACNC,EADM,KAiBlB,OAZAT,qBAAU,WACHR,EAAMkB,QACLD,EAAWjB,EAAMmB,UAAUlG,MAAM,MAEvC,CAAC+E,EAAMmB,UAAWnB,EAAMkB,SAStB,yBAAKL,UAAU,UACX,8CACA,0BAAMC,GAAG,YACL,4BAAQA,GAAG,WAAWM,aAAa,UAAWC,SAV1D,WACI,IAAIzG,EAAI0G,SAASC,eAAe,YAC5BC,EAAc5G,EAAEsF,QAAQtF,EAAE6G,eAAe1E,KAC7CiD,EAAM0B,UAAUF,KAQJ,4BAAQG,MAAM,UAAWC,UAAQ,GAAjC,6BAGCZ,EAAIa,KAAI,SAAAC,GAAI,OACT,4BAAQC,IAAKD,EAAME,KAAMF,EAAMH,MAAOG,GAAOA,UC0BtDG,EAnDQC,IAAMC,YAAW,SAACnC,EAAOoC,GAG9C,IAAMC,EAAQC,OAAOC,OAAOvC,EAAMzB,UAC5BiE,EAAWxC,EAAMwC,SACjBC,EAAWzC,EAAMyC,SACjBC,EAAY1C,EAAM0C,UAexB,SAASC,EAAkBC,EAAIC,EAAIC,EAAKC,GACtC,GAAIH,GAAM,GAAKC,EAAKD,GACfC,GAAMC,GAAOF,EAAKC,EACnB,OAAOE,EAAG,CAACtE,MAAMmE,EAAIlE,IAAImE,IAM/B,OACE,yBAAKhC,UAAU,mBACV6B,EACG,0BAAM5B,GAAG,iBACP,yBAAKA,GAAG,sBAAsBsB,IAAKA,GACjC,sDADF,OAGE,2BAAOtB,GAAG,aAAakC,KAAK,SAASC,IAAK,EAAGC,YAAab,EAAM,GAAIhB,SA7BlF,SAA4BzG,GAE1B,IAAMuI,EAAaC,OAAO9B,SAASC,eAAe,cAAcI,QAAUyB,OAAO9B,SAASC,eAAe,cAAc2B,aAEvHP,EADmBS,OAAOxI,EAAEyI,OAAO1B,OACLwB,EAAYX,EAAUC,MAsB1C,OAKE,gDALF,OAOE,2BAAO3B,GAAG,aAAakC,KAAK,SAAUC,IAAK,EAAGC,YAAab,EAAM,GAAIhB,SA1BnF,SAA4BzG,GAG1B+H,EAFmBS,OAAO9B,SAASC,eAAe,cAAcI,QAAUyB,OAAO9B,SAASC,eAAe,cAAc2B,aACpGE,OAAOxI,EAAEyI,OAAO1B,OACOa,EAAUC,QA2B9C,SCgBKa,MA7Df,SAAetD,GAKX,IAAMqC,EAAQrC,EAAMzB,SAASG,IAAMsB,EAAMzB,SAASE,MAC5C8E,EAAWvD,EAAMwD,gBAAkBnB,EAInCoB,EAAcvB,IAAMwB,SA+B1B,OAJAlD,qBAAU,WACNc,SAASC,eAAe,iBAAiBuB,IAAMS,IACjD,CAACvD,EAAMzB,SAAUgF,IAGf,yBAAKzC,GAAG,sBACJ,yBAAKD,UAAU,SACX,yBAAKC,GAAG,qBACJ,6CAEJ,2BACIA,GAAG,gBACHkC,KAAK,QACL5B,aAAc,EACd0B,IAAK9C,EAAM2D,QAAQxD,MAAOoD,EAAS,IACnClC,SAhChB,SAAkBzG,GACd,IAAIgJ,EAAYR,OAAOxI,EAAEyI,OAAO1B,OAC5BkC,EAAaD,EAAYvB,EAG1BwB,EAAa7D,EAAMwD,iBAClBK,IAGJ7D,EAAMyC,SAAS,CAAChE,MAAMmF,EAAWlF,IAAImF,IAGS,KAA1CJ,EAAYK,QAAQC,SAAS,GAAGpC,OAA0D,KAA1C8B,EAAYK,QAAQC,SAAS,GAAGpC,OAlBjF8B,EAAYK,UACXL,EAAYK,QAAQC,SAAS,GAAGpC,MAAQ,GACxC8B,EAAYK,QAAQC,SAAS,GAAGpC,MAAQ,QAwCxC,kBAAC,EAAD,CAAgBS,IAAKqB,EAAalF,SAAUyB,EAAMzB,SAAUkE,SAAUzC,EAAMyC,SAAUC,UAAW1C,EAAM0C,UAAWF,SAAUxC,EAAMwC,aCR/HwB,MAjDf,SAAqBhE,GA+BjB,OACI,yBAAKa,UAAU,gBACX,yBAAKC,GAAG,wBACJ,+CAFR,OAKI,4BAAQA,GAAG,gBAAgBM,aAAa,UAAUC,SAjC9B,SAACzG,GACzB,IAAIqJ,EAAQrJ,EAAEyI,OAAO1B,MAAO,EACtBuC,EAAiBlE,EAAMmE,SAASF,GACtCjE,EAAM3E,QAAQ,CACVE,KAAM2I,EAAe3I,KACrBuE,KAAMoE,EAAepE,KACrBK,OAAO,IAEXH,EAAMoE,YAAYF,EAAelC,MAGjChC,EAAMqE,SAAS,CACX/F,OAAQ0B,EAAM5B,MAAME,OACpBwB,KAAME,EAAM5B,MAAM0B,KAClBK,OAAO,IAIXmB,SAASC,eAAe,YAAYI,MAAM,UAE1C3B,EAAM0B,UAAU,QAEhB1B,EAAMyC,SAAS,CAAChE,MAAM,EAAGC,IAAI,MAE7B4C,SAASC,eAAe,iBAAiBI,MAAQ,IAUzC,4BAAQI,IAAI,MAAMJ,MAAM,UAAUC,UAAQ,GAA1C,mBAGC5B,EAAMsE,eAAezC,KAAK,SAAA0C,GAAO,OAC9B,4BAAQxC,IAAKwC,EAAQzD,GAAIa,MAAO4C,EAAQzD,IAAKyD,EAAQ7H,gB,QCK1D8H,MAvCf,SAAwBxE,GAEpB,SAASyE,EAAYC,GACdA,GACCC,IACArD,SAASsD,gBAAgBC,aAAa,aAAc,QACpD7E,EAAM8E,eAAc,KAGpBH,IACArD,SAASsD,gBAAgBC,aAAa,aAAc,SACpD7E,EAAM8E,eAAc,IAI5B,SAASH,IACLrD,SAASsD,gBAAgBG,UAAUC,IAAI,cACvCC,YAAW,WACP3D,SAASsD,gBAAgBG,UAAUG,OAAO,gBAC3C,KAEP,OACI,yBAAKrE,UAAU,eACX,wBAAIC,GAAG,gBAAP,uBACA,uBAAGA,GAAG,uBA1BJ,icA6BF,yBAAKA,GAAG,iBACJ,yBAAKA,GAAG,QAAQqE,QAAU,kBAAKV,GAAY,IAAS9C,OAAO,GAAO,yBAAKb,GAAG,iBAAiB,4CAC3F,yBAAKA,GAAG,OAAOqE,QAAU,kBAAKV,GAAY,KAAQ,yBAAK3D,GAAG,cAAa,4CAE3E,yBAAKA,GAAG,sBACJ,2BAAOkB,KAAK,OAAOlB,GAAG,OAAOkC,KAAM,OAAOoC,QAAM,EAAC/D,SAAUrB,EAAMqF,aAAcC,aAAa,QAC5F,2BAAOC,QAAQ,OAAOzE,GAAG,oBAAzB,IAA6C,kBAAC,IAAD,MAA7C,sC,SCxCVwC,G,OAAQkC,IAAOlC,OA2BNmC,MAnBf,SAAuBzF,GACnB,IAAMwC,EAAWxC,EAAMwC,SACjBC,EAAWzC,EAAMyC,SACjBC,EAAY1C,EAAM0C,UASxB,OACI,yBAAK7B,UAAU,kBACX,kBAAC,EAAD,CAAO6E,YAAY,EAAO/D,MAAOW,OAAOC,OAAOvC,EAAMzB,UAAW8C,SATxE,SAAwBM,GACpB,GAAGe,EAAU,CAAC,IAAD,cACcf,EADd,GACFgE,EADE,KACKC,EADL,KAETnD,EAAS,CAAChE,MAAMkH,EAAOjH,IAAIkH,MAM+D9C,IAAKN,MCrBvGqD,EAAO,EACPC,EAAW,EAyEAC,MAvEf,SAAe/F,GAEX,SAASgG,IAEL,IAAIC,EAAcjG,EAAM5B,MAAM0B,KAAK7E,MAAM+E,EAAMzB,SAAS2H,KAAKlG,EAAMzB,SAASG,KAE5E,OADcuH,EAAYE,QAAO,SAACC,EAAGC,GAAJ,OAASjD,OAAOgD,GAAGhD,OAAOiD,KAAI,GAClDJ,EAAYnL,OA0C7B,OAfIkF,EAAM5B,MAAM0B,KAAKhF,OAAS,GAC1B+K,EAAOG,IAAOM,QAAQ,GACtBR,EAfJ,SAAqBS,GAEjB,GAAIA,EAAM,EAAG,OAAOA,EAAID,QAAQ,GAIhC,IAFA,IAAIE,EAAQ,EACRC,EAAIF,EACDE,GAAK,GACRA,GAAO,GACPD,GAAS,EAEb,OAAOD,EAAID,QAAQE,EAAQ,GAKhBE,CA3Bf,WACI,IAAMC,EAAYX,IACdC,EAAcjG,EAAM5B,MAAM0B,KAAK7E,MAAM+E,EAAMzB,SAAS2H,KAAKlG,EAAMzB,SAASG,KAO5E,OALWuH,EAAYpE,KAAK,SAAA+E,GAExB,OADWC,KAAKC,IAAI1D,OAAOwD,GAAQD,EAAU,MAGlCR,QAAO,SAACC,EAAEC,GAAH,OAAQjD,OAAOgD,GAAKhD,OAAOiD,KAAG,GACzCjD,OAAO6C,EAAYnL,OAAQ,GAkBfiM,MAGvBlB,EAAO,EACPC,EAAW,GAIM,SAAjB9F,EAAM3B,SACNwH,EAAO,EACPC,EAAW,GAIX,yBAAKjF,UAAU,cACX,yBAAKC,GAAG,cAEJ,yBAAKA,GAAG,gBACJ,yCACA,6BACI,6BAAM+E,KALlB,iBASI,yBAAK/E,GAAG,oBACJ,6CACA,6BACI,6BAAMgF,QCpDxBkB,EAAY,IARIC,EAAQ,MAsIfC,MA5Hf,SAAclH,GAAM,MAEYC,mBAAS,CAAEH,KAAK,GAAIvE,KAAK,GAAI4E,OAAM,IAF/C,mBAETgH,EAFS,KAEC9L,EAFD,OAGa4E,mBAAS,QAHtB,mBAGTmH,EAHS,KAGA1F,EAHA,OAIWzB,mBAAS,CAAC3B,OAAO,CAAC,QAASwB,KAAK,CAAC,QAASK,OAAM,IAJ3D,mBAITkH,EAJS,KAIDhD,EAJC,OAKWpE,mBAAS,CAACxB,MAAM,EAAGC,IAAI,MALlC,mBAKT4I,EALS,KAKD7E,EALC,OAMaxC,oBAAS,GANtB,mBAMTsH,EANS,KAMEC,EANF,OAOiBvH,mBAAS,IAP1B,mBAOTwH,EAPS,KAOEC,EAPF,OAQyBzH,mBAAS,IARlC,mBAQT0H,EARS,KAQMC,EARN,OASqB3H,mBAAS,WAT9B,mBAST4H,EATS,KASMzD,EATN,KAWViB,EAAe,WAEjB,IAAIyC,EAAaxG,SAASC,eAAe,QAAQwG,MAAM,GACvD3D,EAAY0D,EAAW9F,MACvB,IAAIgG,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAACC,GAIbnB,EAAU3L,QAAQ8M,EAAG9E,OAAO+E,QAG5BV,EAAYD,EAAUY,OAAO,CACzBrG,KAAM8F,EAAW9F,KACjBzG,KAAMyL,EAAUvM,UAChBqF,KAAMkH,EAAUjM,aAGpBM,EAAQ,CACJE,KAAOyL,EAAUvM,UACjBqF,KAAOkH,EAAUjM,UACjBoF,OAAO,IAIXkE,EAAS,CACL/F,OAAQ+I,EAAO/I,OACfwB,KAAMuH,EAAOvH,KACbK,OAAO,IAIXmB,SAASC,eAAe,YAAYI,MAAM,UAE1Cc,EAAS,CAAChE,MAAM,EAAGC,IAAI,MAEvB4C,SAASC,eAAe,iBAAiBI,MAAQ,EAGjDiG,EAAgBD,EAAcU,OAAO,CAACvH,GAAGkG,EAAUlL,cAAcY,SAASoL,EAAW9F,QAGrFN,EAAU,QAGVJ,SAASC,eAAe,iBAAiBI,MAAQqF,EAAUlL,cAG3DkL,EAAUjL,kBAGdiM,EAAOM,WAAWR,IActB,OAVAtH,qBAAU,WACO,SAAV4G,GACC/C,EAAS,CACL/F,OAAQ0I,EAAU1L,MAAM6L,EAAS5L,KAAM4L,EAASrH,KAAMqH,EAAS5L,KAAK,IACpEuE,KAAMkH,EAAU1L,MAAM6L,EAAS5L,KAAM4L,EAASrH,KAAMsH,GACpDjH,OAAO,MAGjB,CAACiH,IAGC,yBAAKvG,UAAU,OAAOC,GAAG,aAEpBqG,EAAShH,MAEJ,yBAAKW,GAAG,oBACN,yBAAKA,GAAG,qBACJ,kBAAC,EAAD,CAAO1C,MAAOiJ,EAAQ9I,SAAU+I,EAAQjJ,OAAQ+I,KAEpD,yBAAKtG,GAAG,oBACJ,kBAAC,EAAD,CAAMpE,SAAUmL,EAAepL,SAAU8K,EAAWhM,KAAM4L,EAAS5L,KAAM6C,MAAOiJ,EAAQhJ,OAAQ+I,EAAS7I,SAAU+I,IACnH,yBAAKxG,GAAG,sBACJ,yBAAKA,GAAG,0BACJ,yBAAKA,GAAG,gBACJ,2BAAOkB,KAAK,OAAOlB,GAAG,OAAOkC,KAAM,OAAOoC,QAAM,EAAC/D,SAAUgE,EAAcC,aAAa,QACtF,2BAAOC,QAAQ,OAAOzE,GAAG,eAAzB,IAAwC,kBAAC,IAAD,MAAxC,6BAHR,iBAMI,kBAAC,EAAD,CAAaqD,SAAUsD,EAAW/F,UAAWA,EAAW0C,YAAaA,EAAaC,SAAUA,EAAUjG,MAAOiJ,EAAQ5E,SAAUA,EAAU6B,eAAgBqD,EAAetM,QAASA,IANrL,iBAQI,kBAAC,EAAD,CAAQ8F,UAAWgG,EAAS5L,KAAM2F,OAAQiG,EAAShH,MAAOuB,UAAWA,KAGzE,yBAAKZ,GAAG,wBACJ,gDACA,kBAAC,EAAD,CAAevC,SAAU+I,EAAQ7E,SAAUA,EAAUC,UAAWyE,EAAShH,MAAOqC,SAAU6E,EAAOvH,KAAKhF,UAG1G,kBAAC,EAAD,CACI6I,QAASwD,EACT1E,SAAUA,EACVlE,SAAU+I,EACV9D,gBAAiB6D,EAAOvH,KAAKhF,OAC7B0H,SAAU6E,EAAOvH,KAAKhF,OACtB4H,UAAWyE,EAAShH,WAQpC,kBAAC,EAAD,CAAgB2E,cAAe0C,EAASnC,aAAcA,MCnItE,SAASkD,IACL,OACI,kBAAC,EAAD,MAIRC,IAASC,OAAO,kBAACF,EAAD,MAASjH,SAASC,eAAe,W","file":"static/js/main.60c7900b.chunk.js","sourcesContent":["function Processor(string){\n    var STRING=\"init\";\n    var Head = \"init\";\n    var Matrix;\n    var CurrentIndex = 1;\n    \n    const setData = (string) => {\n        STRING = string;\n    } //allow calling following methods without params\n\n    const exposeIndex = () =>{\n        return CurrentIndex;\n    }\n\n    const incrementIndex = () =>{\n        CurrentIndex+=1;\n    }\n\n    const getHead = (string=STRING) => {\n        Head = string.split(\"\\n\")[0].split(/(\\s+)/).filter(e => e.trim().length>0);\n        return Head;\n    };\n\n    const getBody = (string=STRING) => {\n        // matrix without state values \n        var body = string.split(\"\\n\").slice(1);\n        var temp=[]\n        for(let i=0; i<body.length; i++){\n            temp.push(body[i].split(/(\\s+)/).filter(e => e.trim().length>0));\n        }\n        Matrix = temp;\n        return temp;\n    }\n\n    const query = (head=Head, matrix=Matrix, queryString) => {\n        // returns an array with the correct variable\n        var var_index = head.indexOf(queryString);\n        if(var_index === -1){\n            console.log(\"bad query\");\n            return;\n        }\n\n        var temp = [];\n        for(let i=0; i<matrix.length; i++){\n            temp.push(matrix[i][var_index]);\n        }\n\n        return temp;\n    }\n\n    \n    return {    \n        getHead,\n        getBody,\n        setData,\n        query,\n        exposeIndex,\n        incrementIndex\n    }\n}\n\nmodule.exports = Processor;","import {useState, useEffect} from 'react';\n\nfunction getWindowDimensions(){\n    const { innerWidth: width, innerHeight: height } = window;\n    return{\n        width,\n        height\n    };\n};\n\nexport default function useWindowDimensions(){\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}","import React, {useEffect, useState} from 'react';\nimport useWindowDimensions from '../utils/useWindowDimensions'\nimport {Line} from 'react-chartjs-2';\n\n/* Main graph window\n\nUse third party react-chartjs-2 to power the visualization\n\nuseWindowDimensions -> specific util function calculating the height of the window \nThe result windowHeight is not very accurate but is responsive -> I found the windowHeight/8 is the best height for the graph relative to the UI\n */\n\nfunction View(props){\n    /*\n    props: head(array), array(array), select(string), rangeObj({start: , end: }), darkMode(bool), fileName(string)\n    */\n    const [_data, setData] = useState({data:{}, options:{} ,ready:false});\n\n    // get height: \n    const windowHeight = useWindowDimensions().height;\n\n    // PROP -> listen to change in array or range\n    useEffect(() => {\n        setData({\n            data: createDataSet(props.array.data, props.select, props.head, props.array.states, props.rangeObj, props.darkMode), \n            options: createOptions(true, \"Iterations\", props.darkMode, props.fileName),\n            ready: props.array.ready // only render if array is ready\n        });\n    },[props.array, props.rangeObj]);\n\n    return (\n        <div className=\"view\" id=\"component\">\n            {_data.ready ? ( \n                <Line height={windowHeight/8} id=\"line-graph\" data={_data.data} options={_data.options}/>\n            ) : (\n                <div id=\"no-input-div\"> <div>To Plot Variable : Select In {props.fileName}</div> </div>\n            )}\n        </div>\n    );\n};\n\nfunction createOptions(showLine, xLabelName, darkMode, fileName){\n    \n    var fontColor = darkMode ? 'white' : 'grey';\n    const gridColor = darkMode ? '#bababa' : '#3b3b3b';\n    return {\n        title:{\n            display: true,\n            text: fileName,\n            fontColor: fontColor,\n            fontSize: 20\n        },\n        legend:{\n            labels:{\n                fontColor: fontColor\n            }\n        },\n        animation:{\n            duration: 0\n        },\n        showLines: showLine,\n        scales: {\n            xAxes: [{\n                scaleLabel: {\n                    display: true,\n                    labelString: xLabelName,\n                    fontSize: 16,\n                    fontColor: fontColor\n                },\n                gridLines : {\n                    drawOnChartArea:false,\n                    drawTicks: true,\n                    color: gridColor\n                },\n                ticks: {\n                    autoSkip: true,\n                    maxTicksLimit: 10,\n                    fontColor: fontColor\n                }\n            }],\n            yAxes :[{\n                gridLines: {\n                    drawOnChartArea:false,\n                    drawTicks: false,\n                    color: gridColor\n                },\n                ticks: {\n                    fontColor: fontColor\n                }\n            }]\n        },\n        responsive: true   \n    };\n}\n\nfunction createDataSet(array, select, head, states, rangeObj, darkMode){\n    const darkTheme = ['rgba(101,190,242,1)', 'rgba(240, 249, 255,1)', 'rbga(255,74,74,1)'];\n    const lightTheme = ['rgba(240,145,83,1)', 'rbga(255, 243, 235, 0.5)', 'rbga(0,153,255,1)'];\n    const theme = darkMode? darkTheme : lightTheme;\n    \n    const data = {\n        labels: states.slice(rangeObj.start,rangeObj.end),\n        datasets: [\n            {\n                label: select,\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: '#00a2ff',\n                borderColor: theme[0],\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: theme[1],\n                pointBackgroundColor: theme[0],\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: theme[2],\n                pointHoverBorderColor: theme[2],\n                pointHoverBorderWidth: 2,\n                pointRadius: 3,\n                pointHitRadius: 10,\n                data: array.slice(rangeObj.start,rangeObj.end)\n            }\n        ]\n    };\n    return data;\n}\n\nexport default View;","import React, {useState, useEffect} from 'react';\n\nfunction Select(props){\n    const [ops, setOptions] = useState([\"default\"]);\n    // props: variables(array), status(boolean), setSelect(function)\n\n    // populate variable selcetion drop down menu \n    useEffect(() => {\n        if(props.status){\n            setOptions(props.variables.slice(1));\n        }\n    },[props.variables, props.status]);\n    \n    function selectChange(){\n        var e = document.getElementById(\"selector\");\n        var selectedVar = e.options[e.selectedIndex].text;\n        props.setSelect(selectedVar)\n    }\n\n    return(\n        <div className=\"select\">\n            <p>Variables: &nbsp;</p> \n            <span id=\"dropdown\">\n                <select id=\"selector\" defaultValue=\"DEFAULT\"  onChange={selectChange}>\n                    <option value=\"DEFAULT\"  disabled> \n                        Select a variable to plot \n                    </option> \n                    {ops.map(item => (\n                        <option key={item} name={item} value={item}>{item}</option>\n                    ))}\n                </select>\n            </span>\n        </div>\n    )\n}\n\nexport default Select;","import React from 'react';\n\n// declare component as constant and wrap it in React.forwardRef, which allows the component to take a reference. Must use forwardRef if using functional components\nconst WindowInterval = React.forwardRef((props, ref) => {\n\n  // props: rangeObj, setRange(), dataReady, maxValue(data length)\n  const range = Object.values(props.rangeObj); // -> [lower, upper]\n  const maxValue = props.maxValue;\n  const setRange = props.setRange;\n  const dataReady = props.dataReady;\n\n  function onLowerBoundChange(e){\n    // takes upperbound value if any, else use placeholder\n    const upperBound = Number(document.getElementById('upperbound').value) || Number(document.getElementById('upperbound').placeholder); \n    const lowerBound = Number(e.target.value); \n    evaluateAndUpdate(lowerBound, upperBound, maxValue, setRange);\n  }\n\n  function onUpperBoundChange(e){\n    const lowerBound = Number(document.getElementById('lowerbound').value) || Number(document.getElementById('lowerbound').placeholder);\n    const upperBound = Number(e.target.value);\n    evaluateAndUpdate(lowerBound, upperBound, maxValue, setRange);\n  }\n\n  function evaluateAndUpdate(lb, up, max, cb){\n    if (lb >= 0 && up > lb ){\n      if(up <= max && lb < up){\n        return cb({start:lb, end:up});\n      }\n    }\n  }\n\n  // note the ref on div#text-select-display -> this is the HTML elem that the reference is pointing to in Range.js\n  return(\n    <div className=\"window-interval\">\n        {dataReady ? (\n            <form id=\"interval-form\">\n              <div id=\"text-select-display\" ref={ref}>\n                <label> Showing iteration </label> \n                &nbsp;\n                <input id=\"lowerbound\" type=\"number\" min={0} placeholder={range[0]} onChange={onLowerBoundChange}/> \n                &nbsp;\n                <label>to iteration </label>\n                &nbsp;\n                <input id=\"upperbound\" type=\"number\"  min={0} placeholder={range[1]} onChange={onUpperBoundChange}/>\n              </div>\n            </form>\n        ) : (\n          null\n        )}\n    </div>\n  )\n})\n\nexport default WindowInterval;","import React, {useEffect} from 'react';\nimport WindowInterval from './WindowInterval';\n\nfunction Range(props){\n    /*\n    props: dataObj, onUpdate(), rangeObj. dataArrayLength, setRange() onSliderMove()\n    */\n    \n    const range = props.rangeObj.end - props.rangeObj.start;\n    const slideMax = props.dataArrayLength - range;\n\n    // pass reference to child component and attach to a selected HTML element \n    // in this case we attach it to the div that contains the two text input field\n    const intervalRef = React.useRef() \n\n    function resetInputFields(){\n        // if child component is mounted -> reset text input field on slider drag  \n        if(intervalRef.current){\n            intervalRef.current.children[1].value = ''; // lowerbound input text field\n            intervalRef.current.children[3].value = ''; // upperbound ...\n        }\n    }\n    \n    function onChange(e){\n        let leftIndex = Number(e.target.value);\n        let rightIndex = leftIndex + range;\n\n        // range check, right index should not exceed the length of the data array\n        if(rightIndex > props.dataArrayLength){\n            rightIndex--;\n        }\n        // set new range\n        props.setRange({start:leftIndex, end:rightIndex});\n\n        // reset input field if either input fields have value\n        if( intervalRef.current.children[1].value !== '' || intervalRef.current.children[3].value !== '' ){\n            resetInputFields();\n        }\n    }\n    // update maximum on slider elem when there is a change to the range \n    useEffect(()=>{\n        document.getElementById(\"window-slider\").max = slideMax;\n    },[props.rangeObj, slideMax])\n\n    return (\n        <div id=\"range-input-window\">\n            <div className=\"range\">\n                <div id=\"slide-window-text\">\n                    <p>Slide Window:</p>\n                </div> \n                <input\n                    id=\"window-slider\"\n                    type=\"range\"\n                    defaultValue={0}\n                    max={props.dataObj.ready? slideMax:100}\n                    onChange={onChange}\n                    >\n                </input>\n            </div>\n            <WindowInterval ref={intervalRef} rangeObj={props.rangeObj} setRange={props.setRange} dataReady={props.dataReady} maxValue={props.maxValue}/>\n        </div>\n    )\n}\n\nexport default Range;\n","import React from 'react';\n\nfunction DataSection(props){\n    // props: availableFiles(obj{id, fileName}), setData(func), dataSets (obj)\n    // console.log(props.dataSets)\n\n    const handleOnChangeState = (e) => {\n        let index = e.target.value -1;\n        const currentDataset = props.dataSets[index];\n        props.setData({\n            head: currentDataset.head,\n            data: currentDataset.data,\n            ready: true\n        })\n        props.setFileName(currentDataset.name);\n\n        // toggle View.js render status on new file selection. -> return to init meddage\n        props.setArray({\n            states: props.array.states,\n            data: props.array.data,\n            ready: false\n        });\n        \n        // return variable select to default\n        document.getElementById('selector').value='DEFAULT';\n        // set select back to default\n        props.setSelect(\"init\")\n        // return range obj to init \n        props.setRange({start:0, end:200});\n        // return window-slider to 0\n        document.getElementById('window-slider').value = 0;\n    }\n\n    return(\n        <div className=\"data-section\">\n            <div id=\"choose-data-set-text\">\n                <p>Choose DataSet:</p>\n            </div>\n            &nbsp; \n            <select id=\"data-selector\" defaultValue=\"DEFAULT\" onChange={handleOnChangeState}>\n                <option key=\"def\" value=\"DEFAULT\" disabled> \n                    Select Data Set  \n                </option>\n                {props.availableFiles.map( fileObj => (\n                    <option key={fileObj.id} value={fileObj.id}>{fileObj.fileName}</option>\n                ))}\n            </select>\n        </div>\n    )\n}\n\nexport default DataSection;","import React from 'react';\nimport { FaUpload } from 'react-icons/fa'\n\n/* What the user sees before a dataset is uploaded\n\nRepalce the lorem text with a description of the application\n*/\n\nconst lorem = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n\nfunction InitInputGroup(props) {\n    //props setColorTheme() -> setting dark or white mode\n    function changeTheme(darkTheme){\n        if(darkTheme){\n            transition();\n            document.documentElement.setAttribute('data-theme', 'dark');\n            props.setColorTheme(true);\n        }\n        else{\n            transition();\n            document.documentElement.setAttribute('data-theme', 'light');\n            props.setColorTheme(false);\n        }\n    }\n\n    function transition(){\n        document.documentElement.classList.add('transition');\n        setTimeout(() => {\n            document.documentElement.classList.remove('transition');\n        }, 1000);\n    }\n    return(\n        <div className=\"input-panel\">\n            <h1 id=\"project-name\">Time Series Plotter</h1>\n            <p id=\"project-description\"> \n                {lorem}\n            </p>\n            <div id=\"theme-changer\">\n                <div id=\"light\" onClick={ ()=> changeTheme(false) } value={false}><div id=\"inner-default\" ><p>Light Theme</p></div></div>\n                <div id=\"dark\" onClick={ ()=> changeTheme(true) }><div id=\"inner-dark\"><p>Dark Theme</p></div></div>\n            </div>\n            <div id=\"input-select-panel\">\n                <input name=\"file\" id=\"file\" type ='file' hidden onChange={props.handleUpload} autoComplete=\"off\"/>\n                <label htmlFor=\"file\" id=\"file-label-panel\"> <FaUpload/> Choose File To Begin Plotting </label>\n            </div>\n        </div>\n    )\n};\n\nexport default InitInputGroup;","import React from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nconst Range = Slider.Range;\n\n/* Two handle slider\n\nuses thrid party lib rc-slider\ncheck out https://github.com/schrodinger/rc-slider for more \n*/\n\nfunction RangeInterval(props){\n    const maxValue = props.maxValue;\n    const setRange = props.setRange;\n    const dataReady = props.dataReady;\n    \n    function onSliderChange(value){\n        if(dataReady){\n            const [lower, upper] = value;\n            setRange({start:lower, end:upper});\n        }\n    }\n\n    return(\n        <div className=\"range-interval\">\n            <Range allowCross={false} value={Object.values(props.rangeObj)} onChange={onSliderChange} max={maxValue}/>\n        </div>\n    )\n}\n\nexport default RangeInterval;","import React from 'react';\n\n// maintain variable outside of function to avoid reset on component rerender -> mutations \n\nvar Mean = 0;\nvar Variance = 0;\n\nfunction Stats(props){\n    //props rangeObj{start:, end:}, array({data:, ready: ,states:}) select(String)\n    function mean(){\n        // if array is not in initial state\n        let targetArray = props.array.data.slice(props.rangeObj.star,props.rangeObj.end);\n        const Total = targetArray.reduce((a, b)=> Number(a)+Number(b), 0);\n        return Total/targetArray.length;\n    }\n    function variance(){\n        const LocalMean = mean();\n        let targetArray = props.array.data.slice(props.rangeObj.star,props.rangeObj.end);\n        \n        let sums = targetArray.map( elem =>{\n            let diff = Math.pow(Number(elem) - LocalMean,2);\n            return diff;\n        })\n        let Sum = sums.reduce((a,b)=> Number(a) + Number(b),0)\n        return Sum/Number(targetArray.length -1);\n    }\n\n    function toCustomFit(num){\n        // trim off additon decimal points after the FIRST THREE NON ZERO numbers\n        if (num > 1) return num.toFixed(3);\n\n        var count = 0\n        var n = num;\n        while (n <= 1){\n            n = n *10;\n            count += 1;\n        }\n        return num.toFixed(count + 2)\n    }\n\n    if (props.array.data.length > 1){\n        Mean = mean().toFixed(3);\n        Variance = toCustomFit(variance());\n    }\n    else{\n        Mean = 0;\n        Variance = 0;\n    }\n\n    // if nothing selected -> set stats back to 0 \n    if (props.select === 'init'){\n        Mean = 0; \n        Variance = 0;\n    }\n    \n    return(\n        <div className=\"statistics\">\n            <div id=\"stat-lines\">\n\n                <div id=\"mean-wrapper\">\n                    <p>Mean: &nbsp;</p> \n                    <div>\n                        <div>{Mean}</div> \n                    </div>\n                </div>\n                &nbsp; &nbsp; &nbsp;\n                <div id=\"variance-wrapper\">\n                    <p>Variance: &nbsp;</p> \n                    <div>\n                        <div>{Variance}</div> \n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Stats;","import React, { useState, useEffect} from 'react';\nimport View from './View.js';\nimport Select from './Select';\nimport Range from './Range';\nimport DataSection from './DataSets'\nimport InitInputGroup from './InitInputGroup';\nimport RangeInterval from './RangeInterval';\nimport Stats from './Stats';\nimport { FaUpload } from 'react-icons/fa'\nconst DataProcessor = require('../libs/Processor');\n\n/* home page \n- Initializes all states and pass down to children \n- Only prop is prop.dataFileNames -> use to collect names of inputted files.\n*/\n\n// declare outside of component becase need to keep track of internal data;\nconst dataUtils = new DataProcessor();\n\nfunction Home(props){\n    // Collection of states that needs to persist beyond each render\n    const [_dataObj, setData] = useState({ data:\"\", head:\"\", ready:false }); //input dataset \n    const [_select, setSelect] = useState(\"init\");  // variable being displayed\n    const [_array, setArray] = useState({states:[\"init\"], data:[\"init\"], ready:false}); // selected variable data only\n    const [_range, setRange] = useState({start:0, end:200}); // number of variables displayed at onece \n    const [_darkMode, setMode] = useState(false); // toggle dark or light mode \n    const [_datasets, setDatasets] = useState([]); // array of all dataset data \n    const [_dataSetNames, setDataSetNames] = useState([]); // names of datasets, used to populate DataSection drop down menu \n    const [_currFileName, setFileName] = useState(\"default\"); // current selected file name, used for inital display on data set change \n\n    const handleUpload = () => {\n        // Runs ONLY when users upload a new data set\n        var fileToLoad = document.getElementById(\"file\").files[0]\n        setFileName(fileToLoad.name);\n        var reader = new FileReader();\n        reader.onload = (ev) => {\n            \n            // feed data to the data processor instance \n            // will keep track of the data set and can be outputted easily \n            dataUtils.setData(ev.target.result);\n            \n            // store data in state as an object\n            setDatasets(_datasets.concat({\n                name: fileToLoad.name,\n                head: dataUtils.getHead(),\n                data: dataUtils.getBody()\n            }));\n\n            setData({   \n                head : dataUtils.getHead(),\n                data : dataUtils.getBody(),\n                ready: true\n            });\n\n            // set array.ready to false on new file upload so View renders welcoming message \n            setArray({\n                states: _array.states,\n                data: _array.data,\n                ready: false\n            });\n\n            // return variable select to default\n            document.getElementById('selector').value='DEFAULT';\n            // return range obj to init \n            setRange({start:0, end:200});\n            // return window-slider to 0\n            document.getElementById('window-slider').value = 0;\n\n            //append to FileNameArray\n            setDataSetNames(_dataSetNames.concat({id:dataUtils.exposeIndex(),fileName:fileToLoad.name}));\n\n            //return _select to 'init'\n            setSelect('init');\n\n            //set DataSection select to newly uploaded file\n            document.getElementById('data-selector').value = dataUtils.exposeIndex();\n\n            //increment dataset index by 1\n            dataUtils.incrementIndex();\n            \n        }\n        reader.readAsText(fileToLoad);\n    }\n\n    // captures new variable array when variable selection changes\n    useEffect(() => {\n        if(_select!==\"init\"){\n            setArray({\n                states: dataUtils.query(_dataObj.head, _dataObj.data, _dataObj.head[0]),\n                data: dataUtils.query(_dataObj.head, _dataObj.data, _select), \n                ready: true\n            });\n        }\n    },[_select])\n\n    return(\n        <div className=\"home\" id=\"home-main\">\n        \n            {_dataObj.ready ? \n\n                ( <div id=\"data-ready-group\">\n                    <div id=\"statisics-wrapper\">\n                        <Stats array={_array} rangeObj={_range} select={_select}/>\n                    </div>\n                    <div id=\"controls-wrapper\">\n                        <View fileName={_currFileName} darkMode={_darkMode} head={_dataObj.head} array={_array} select={_select} rangeObj={_range}/>\n                        <div id=\"main-control-group\">\n                            <div id=\"input-and-data-section\">\n                                <div id=\"input-select\">\n                                    <input name=\"file\" id=\"file\" type ='file' hidden onChange={handleUpload} autoComplete=\"off\"/>\n                                    <label htmlFor=\"file\" id=\"input-label\"> <FaUpload/> Upload Additional File </label>\n                                </div>\n                                &nbsp; &nbsp; &nbsp;\n                                <DataSection dataSets={_datasets} setSelect={setSelect} setFileName={setFileName} setArray={setArray} array={_array} setRange={setRange} availableFiles={_dataSetNames} setData={setData}/>\n                                &nbsp; &nbsp; &nbsp;\n                                <Select variables={_dataObj.head} status={_dataObj.ready} setSelect={setSelect}/>\n                            </div>\n                            \n                            <div id=\"range-interval-group\">\n                                <p> Range Interval: </p>\n                                <RangeInterval rangeObj={_range} setRange={setRange} dataReady={_dataObj.ready} maxValue={_array.data.length}/>\n                            </div>\n                            \n                            <Range\n                                dataObj={_dataObj} \n                                setRange={setRange} \n                                rangeObj={_range} \n                                dataArrayLength={_array.data.length} \n                                maxValue={_array.data.length} \n                                dataReady={_dataObj.ready}\n                            /> \n                        </div>\n                    </div>\n                  </div>\n\n                ) : ( \n            \n                <InitInputGroup setColorTheme={setMode} handleUpload={handleUpload}/> )\n            }\n        </div>\n    )\n};\n\nexport default Home;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Home from './components/Home.js';\n\n\nfunction App(){\n    return(\n        <Home/>\n    )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}