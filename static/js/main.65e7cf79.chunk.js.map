{"version":3,"sources":["utils/useWindowDimensions.js","components/View.js","components/Select.js","components/Range.js","components/DataSets.js","components/WindowInterval.js","components/InitInputGroup.js","components/RangeInterval.js","libs/dbUtils.js","components/Home.js","index.js","libs/Processor.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","createOptions","showLine","xLabelName","darkMode","fileName","fontColor","gridColor","title","display","text","fontSize","legend","labels","animation","duration","showLines","scales","xAxes","scaleLabel","labelString","gridLines","drawOnChartArea","drawTicks","color","ticks","autoSkip","maxTicksLimit","yAxes","responsive","createDataSet","array","select","head","states","rangeObj","theme","slice","start","end","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","View","props","useState","options","ready","_data","setData","windowHeight","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","className","id","Select","ops","setOptions","status","variables","shift","defaultValue","onChange","e","document","getElementById","selectedVar","selectedIndex","setSelect","value","disabled","map","item","key","name","Range","range","slideMax","dataArrayLength","max","type","dataObj","leftIndex","Number","target","rightIndex","setRange","dataProcessor","require","DataSection","fetch","method","headers","then","res","json","JSONdata","getHead","getBody","file","availableFiles","setFileName","setArray","fileObj","WindowInterval","Object","values","maxValue","dataReady","lower","upper","_lowerBound","setLowerBound","_upperBound","setUpperBound","clearInputs","onInput","min","placeholder","onClick","alert","InitInputGroup","changeTheme","darkTheme","transition","documentElement","setAttribute","setColorTheme","classList","add","setTimeout","remove","hidden","handleUpload","autoComplete","htmlFor","Slider","RangeInterval","allowCross","DBUtils","CurrDataSetId","postDataSet","body","JSON","stringify","catch","err","console","log","exposeId","DataProcessor","dbUtils","Home","dataUtils","_dataObj","_select","_array","_range","_darkMode","setMode","_currFileName","fileToLoad","files","reader","FileReader","onload","ev","result","homeDiv","setFileNames","dataFileNames","concat","readAsText","query","length","App","ReactDOM","render","module","exports","string","Matrix","STRING","Head","split","filter","trim","temp","i","push","matrix","queryString","var_index","indexOf"],"mappings":"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","file":"static/js/main.65e7cf79.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\n\nfunction getWindowDimensions(){\n    const { innerWidth: width, innerHeight: height } = window;\n    return{\n        width,\n        height\n    };\n};\n\nexport default function useWindowDimensions(){\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}","import React, {useEffect, useState} from 'react';\nimport useWindowDimensions from '../utils/useWindowDimensions'\nimport {Line} from 'react-chartjs-2';\n\nfunction View(props){\n    /*\n    props: head(array), array(array), select(string), rangeObj({start: , end: }), darkMode(bool), fileName(string)\n    */\n    const [_data, setData] = useState({data:{}, options:{} ,ready:false});\n\n    // get height: \n    const windowHeight = useWindowDimensions().height;\n\n    // PROP -> listen to change in array or range\n    useEffect(() => {\n        setData({\n            data: createDataSet(props.array.data, props.select, props.head, props.array.states, props.rangeObj, props.darkMode), \n            options: createOptions(true, \"Iterations\", props.darkMode, props.fileName),\n            ready: props.array.ready // only render if array is ready\n        });\n    },[props.array, props.rangeObj]);\n\n    return (\n        <div className=\"view\" id=\"component\">\n            {_data.ready ? ( \n                <Line height={windowHeight/8} id=\"line-graph\" data={_data.data} options={_data.options}/>\n            ) : (\n                <div id=\"no-input-div\"> <div>To Plot Variable : Select In {props.fileName}</div> </div>\n            )}\n        </div>\n    );\n};\n\nfunction createOptions(showLine, xLabelName, darkMode, fileName){\n    \n    var fontColor = darkMode ? 'white' : 'grey';\n    const gridColor = darkMode ? '#bababa' : '#3b3b3b';\n    return {\n        title:{\n            display: true,\n            text: fileName,\n            fontColor: fontColor,\n            fontSize: 20\n        },\n        legend:{\n            labels:{\n                fontColor: fontColor\n            }\n        },\n        animation:{\n            duration: 0\n        },\n        showLines: showLine,\n        scales: {\n            xAxes: [{\n                scaleLabel: {\n                    display: true,\n                    labelString: xLabelName,\n                    fontSize: 16,\n                    fontColor: fontColor\n                },\n                gridLines : {\n                    drawOnChartArea:false,\n                    drawTicks: true,\n                    color: gridColor\n                },\n                ticks: {\n                    autoSkip: true,\n                    maxTicksLimit: 10,\n                    fontColor: fontColor\n                }\n            }],\n            yAxes :[{\n                gridLines: {\n                    drawOnChartArea:false,\n                    drawTicks: false,\n                    color: gridColor\n                },\n                ticks: {\n                    fontColor: fontColor\n                }\n            }]\n        },\n        responsive: true   \n    };\n}\n\nfunction createDataSet(array, select, head, states, rangeObj, darkMode){\n    const darkTheme = ['rgba(101,190,242,1)', 'rgba(240, 249, 255,1)', 'rbga(255,74,74,1)'];\n    const lightTheme = ['rgba(240,145,83,1)', 'rbga(255, 243, 235, 0.5)', 'rbga(0,153,255,1)'];\n    const theme = darkMode? darkTheme : lightTheme;\n    \n    const data = {\n        labels: states.slice(rangeObj.start,rangeObj.end),\n        datasets: [\n            {\n                label: select,\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: '#00a2ff',\n                borderColor: theme[0],\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: theme[1],\n                pointBackgroundColor: theme[0],\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: theme[2],\n                pointHoverBorderColor: theme[2],\n                pointHoverBorderWidth: 2,\n                pointRadius: 3,\n                pointHitRadius: 10,\n                data: array.slice(rangeObj.start,rangeObj.end)\n            }\n        ]\n    };\n    return data;\n}\n\nexport default View;","import React, {useState, useEffect} from 'react';\n\nfunction Select(props){\n    const [ops, setOptions] = useState([\"default\"]);\n    const text = \"Variables: \"\n\n    useEffect(() => {\n        if(props.status){\n            // console.log(props.variables)\n            setOptions(props.variables.slice(1));\n            ops.shift(\"none\");\n        }\n    },[props.variables, props.status]);\n    \n    function selectChange(){\n        var e = document.getElementById(\"selector\");\n        var selectedVar = e.options[e.selectedIndex].text;\n        // console.log(selectedVar);\n\n        props.setSelect(selectedVar)\n    }\n\n    return(\n\n        <div className=\"select\">\n            <p>Variables: &nbsp;</p> \n            <span id=\"dropdown\">\n                <select id=\"selector\" defaultValue=\"DEFAULT\"  onChange={selectChange}>\n                    <option value=\"DEFAULT\"  disabled> \n                        Select a variable to plot \n                    </option> \n                    {ops.map(item => (\n                        <option key={item} name={item} value={item}>{item}</option>\n                    ))}\n                </select>\n            </span>\n        </div>\n    )\n}\n\nexport default Select;","import React, {useEffect} from 'react';\n\nfunction Range(props){\n    /*\n    props: dataObj, onUpdate(), rangeObj. dataArrayLength, setRange()\n    */\n    \n    var range = props.rangeObj.end - props.rangeObj.start;\n    var slideMax = props.dataArrayLength - range;\n\n    function onChange(e){\n\n        let leftIndex = Number(e.target.value);\n        let rightIndex = leftIndex + range;\n        \n        props.setRange({start:leftIndex, end:rightIndex});\n    }\n\n    useEffect(()=>{\n        document.getElementById(\"window-slider\").max = slideMax;\n    },[props.rangeObj])\n\n    return (\n        <div className=\"range\">\n            <div id=\"slide-window-text\">\n                <p>Slide Window:</p>\n            </div> \n            <input\n                id=\"window-slider\"\n                type=\"range\"\n                defaultValue={0}\n                max={props.dataObj.ready? slideMax:100}\n                onChange={onChange}\n                >\n            </input>\n        </div>\n    )\n}\n\nexport default Range;\n","import React from 'react';\nconst Processor = require('../libs/Processor');\n\nconst dataProcessor = new Processor();\n\nfunction DataSection(props){\n    // props: availableFiles(obj{id, fileName}), setData(func)\n    const handleOnChange = (e) =>{\n        let id = e.target.value;\n        fetch(`api/${id}`, {\n            method:'GET',\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(JSONdata => {\n            // PROCESS DATA\n            dataProcessor.setData(JSONdata.data);\n            props.setData({\n                head: dataProcessor.getHead(JSONdata.data),\n                data: dataProcessor.getBody(JSONdata.data),\n                ready : true\n            })\n        })\n        .then(()=>{\n            let file = props.availableFiles[id-1];\n            props.setFileName(file.fileName);\n        });\n\n        // toggle View.js render status on new file selection. -> return to init meddage\n        props.setArray({\n            states: props.array.states,\n            data: props.array.data,\n            ready:false\n        });\n        \n        // return variable select to default\n        document.getElementById('selector').value='DEFAULT';\n        // return range obj to init \n        props.setRange({start:0, end:200});\n        // return window-slider to 0\n        document.getElementById('window-slider').value = 0;\n    }\n\n    return(\n        <div className=\"data-section\">\n            <div id=\"choose-data-set-text\">\n                <p>Choose DataSet:</p>\n            </div>\n            &nbsp; \n            <select id=\"data-selector\" defaultValue=\"DEFAULT\" onChange={handleOnChange}>\n                <option key=\"def\" value=\"DEFAULT\" disabled> \n                    Select Data Set  \n                </option>\n                {props.availableFiles.map( fileObj => (\n                    <option key={fileObj.id} value={fileObj.id}>{fileObj.fileName}</option>\n                ))}\n            </select>\n        </div>\n    )\n}\n\nexport default DataSection;","import React, {useState} from 'react';\n\nfunction WindowInterval(props){\n  // props: rangeObj, setRange(), dataReady, maxValue(data length)\n  const range = Object.values(props.rangeObj);\n  const maxValue = props.maxValue;\n  const setRange = props.setRange;\n  const dataReady = props.dataReady;\n\n  // DOM elems \n  const lower = document.getElementById('lowerbound');\n  const upper = document.getElementById('upperbound');\n\n  // local states \n  const [_lowerBound, setLowerBound] = useState(0);\n  const [_upperBound, setUpperBound] = useState(20);\n\n  function lowerBoundChange(e){\n    if(dataReady)\n      setLowerBound(+e.target.value);\n  }\n\n  function upperBoundChange(e){\n    if(dataReady)\n      setUpperBound(+e.target.value);\n  }\n\n  function handleApply(){\n    // update range \n    if(dataReady){\n\n      // If lowerbound > upperbound \n      if(_lowerBound >= _upperBound){\n        alert(\"Please select an interval where upperbound is greater than lowerbound\");\n        clearInputs();\n        return;\n      }\n\n      // if eiter bound exceed dataLength\n      if(_lowerBound > maxValue || _upperBound > maxValue){\n        alert(\"Range exceeds dataset length\");\n        clearInputs();\n        return;\n      }\n\n      setRange({start:_lowerBound, end:_upperBound});\n      \n      // empty input field \n      clearInputs();\n    }\n  }\n\n  function clearInputs(){\n    lower.value = null;\n    upper.value = null;\n  }\n\n  return(\n    <div className=\"window-interval\">\n        {dataReady ? (\n            <div>\n              <div id=\"text-select-display\">\n              <label> Showing iteration </label> \n              &nbsp;\n              <input id=\"lowerbound\" type=\"number\" onInput={lowerBoundChange} min={0} placeholder={range[0]}/> \n              &nbsp;\n              <label>to iteration </label>\n              &nbsp;\n              <input id=\"upperbound\" type=\"number\" onInput={upperBoundChange} min={0} placeholder={range[1]}/>\n              &nbsp;\n              <button onClick={handleApply}>Apply</button>\n              </div>\n            </div>\n        ) : (\n          null\n        )}\n    </div>\n  )\n}\n\nexport default WindowInterval;","import React from 'react';\nimport { FaUpload } from 'react-icons/fa'\n\nconst lorem = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n\nfunction InitInputGroup(props) {\n    //props setColorTheme() -> setting dark or white mode\n    function changeTheme(darkTheme){\n        if(darkTheme){\n            transition();\n            document.documentElement.setAttribute('data-theme', 'dark');\n            props.setColorTheme(true);\n        }\n        else{\n            transition();\n            document.documentElement.setAttribute('data-theme', 'light');\n            props.setColorTheme(false);\n        }\n    }\n\n    function transition(){\n        document.documentElement.classList.add('transition');\n        setTimeout(() => {\n            document.documentElement.classList.remove('transition');\n        }, 1000);\n    }\n    return(\n        <div className=\"input-panel\">\n            <h1 id=\"project-name\">Time Series Plotter</h1>\n            <p id=\"project-description\"> \n                {lorem}\n            </p>\n            <div id=\"theme-changer\">\n                <div id=\"light\" onClick={()=> changeTheme(false)} value={false}><div id=\"inner-default\" ><p>Light Theme</p></div></div>\n                <div id=\"dark\" onClick={()=> changeTheme(true)}><div id=\"inner-dark\"><p>Dark Theme</p></div></div>\n            </div>\n            <div id=\"input-select-panel\">\n                <input name=\"file\" id=\"file\" type ='file' hidden onChange={props.handleUpload} autoComplete=\"off\"/>\n                <label htmlFor=\"file\" id=\"file-label-panel\"> <FaUpload/> Choose File To Begin Plotting </label>\n            </div>\n        </div>\n    )\n};\n\nexport default InitInputGroup;","import React from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nconst Range = Slider.Range;\n\nfunction RangeInterval(props){\n    const maxValue = props.maxValue;\n    const setRange = props.setRange;\n    const dataReady = props.dataReady;\n    const range = Object.values(props.rangeObj);\n    \n    function onSliderChange(value){\n        if(dataReady){\n            const [lower, upper] = value;\n            setRange({start:lower, end:upper});\n        }\n    }\n    return(\n        <div className=\"range-interval\">\n            <Range allowCross={false} value={range} onChange={onSliderChange} max={maxValue}/>\n        </div>\n    )\n}\n\nexport default RangeInterval;","function DBUtils(){\n    var CurrDataSetId = 1;\n\n    const incrementId = () =>{\n        CurrDataSetId+=1;\n        // console.log(\"incre,emt\", CurrDataSetId);\n    }\n\n    const exposeId = () =>{\n        return CurrDataSetId;\n    }\n\n    const postDataSet = (data) => {\n        fetch('/api/add', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                id : CurrDataSetId,\n                data : data\n            })\n        })\n        .then(()=>{ \n            // console.log(CurrDataSetId, \"HENLO\");\n            incrementId();\n        })\n        .catch(err=>console.log(err))\n    }\n\n    return{\n        postDataSet,\n        exposeId,\n    }\n}\n\nexport default DBUtils;","import React, { useState, useEffect} from 'react';\nimport View from './View.js';\nimport Select from './Select';\nimport Range from './Range';\nimport DataSection from './DataSets'\nimport WindowInterval from './WindowInterval';\nimport InitInputGroup from './InitInputGroup';\nimport RangeInterval from './RangeInterval';\n\nimport { FaUpload } from 'react-icons/fa'\nimport DBUtils from '../libs/dbUtils';\nconst DataProcessor = require('../libs/Processor');\n\n// declare outside of component becase need to keep track of internal id;\nconst dbUtils = new DBUtils()\n\nfunction Home(props){\n    // props: dataFileNames, setFileNames();\n\n    var dataUtils = new DataProcessor();\n    const [_dataObj, setData] = useState({ data:\"\", head:\"\", ready:false }); //input dataset \n    const [_select, setSelect] = useState(\"init\");  // variable being displayed\n    const [_array, setArray] = useState({states:[\"init\"], data:[\"init\"], ready:false}); // select variable data only\n    const [_range, setRange] = useState({start:0, end:200}); // number of variables displayed at onece \n    const [_darkMode, setMode] = useState(false);\n\n    // current file name \n    const [_currFileName, setFileName] =useState(\"default\");\n\n    const handleUpload = () => {\n        var fileToLoad = document.getElementById(\"file\").files[0]\n        setFileName(fileToLoad.name);\n        var reader = new FileReader();\n        reader.onload = (ev) => {\n            \n            // Post data into db\n            dbUtils.postDataSet(ev.target.result)\n\n            // callback\n            dataUtils.setData(ev.target.result);\n            setData({   \n                head : dataUtils.getHead(),\n                data : dataUtils.getBody(),\n                ready: true\n            });\n\n            // set array.ready to false on new file upload so View renders welcoming message \n            setArray({\n                states: _array.states,\n                data: _array.data,\n                ready: false\n            });\n\n            // return variable select to default\n            document.getElementById('selector').value='DEFAULT';\n            // return range obj to init \n            setRange({start:0, end:200});\n            // return window-slider to 0\n            document.getElementById('window-slider').value = 0;\n\n            // change DOM \n            if(!document.getElementById('home-main-active')){\n                const homeDiv = document.getElementById('home-main');\n                homeDiv.id = homeDiv.id + \"-active\";\n            }\n\n            //append to FileNameArray\n            props.setFileNames(props.dataFileNames.concat({id:dbUtils.exposeId(),fileName:fileToLoad.name}))\n\n            //set DataSection select to newly uploaded file\n            document.getElementById('data-selector').value = dbUtils.exposeId();\n            \n        }\n        reader.readAsText(fileToLoad);\n    }\n\n    // variable to plot select\n    useEffect(() => {\n        if(_select!==\"init\"){\n            setArray({\n                states: dataUtils.query(_dataObj.head, _dataObj.data, _dataObj.head[0]),\n                data: dataUtils.query(_dataObj.head, _dataObj.data, _select), \n                ready: true});\n        }\n    },[_select])\n\n    return(\n        <div className=\"home\" id=\"home-main\">\n            {_dataObj.ready ? \n                ( <div id=\"data-ready-group\">\n                    <div id=\"controls-wrapper\">\n                    <View fileName={_currFileName} darkMode={_darkMode} head={_dataObj.head} array={_array} select={_select} rangeObj={_range}/>\n                    <div id=\"main-control-group\">\n                        <div id=\"input-and-data-section\">\n                            <div id=\"input-select\">\n                                <input name=\"file\" id=\"file\" type ='file' hidden onChange={handleUpload} autoComplete=\"off\"/>\n                                <label htmlFor=\"file\" id=\"input-label\"> <FaUpload/> Upload Additional File </label>\n                            </div>\n                            &nbsp; &nbsp; &nbsp;\n                            {/* id: \"data-section\" */}\n                            <DataSection setFileName={setFileName} setArray={setArray} array={_array} setRange={setRange} availableFiles={props.dataFileNames} setData={setData}/>\n                            &nbsp; &nbsp; &nbsp;\n                            <Select variables={_dataObj.head} status={_dataObj.ready} setSelect={setSelect}/>\n                        </div>\n                        \n                        <div id=\"range-interval-group\">\n                            <p> Range Interval: </p>\n                            <RangeInterval rangeObj={_range} setRange={setRange} dataReady={_dataObj.ready} maxValue={_array.data.length}/>\n                        </div>\n                        \n                        <div id=\"range-input-window\">\n                            {/* id: range */}\n                            <Range dataObj={_dataObj} setRange={setRange} rangeObj={_range} dataArrayLength={_array.data.length}/> \n                            {/* id: windowInterval */}\n                            <WindowInterval rangeObj={_range} setRange={setRange} dataReady={_dataObj.ready} maxValue={_array.data.length}/>\n                        </div>\n                        \n                        \n                    </div>\n                    </div>\n                  </div>\n\n                ) : ( \n            \n                <InitInputGroup setColorTheme={setMode} handleUpload={handleUpload}/> )\n            }\n        </div>\n    )\n};\n\nexport default Home;","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Home from './components/Home.js';\n\n\nfunction App(){\n    const [dataFileNames, setFileNames] = useState([]);\n    return(\n        <Home setFileNames={setFileNames} dataFileNames={dataFileNames}/>\n    )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n","function Processor(string){\n    var STRING=\"init\";\n    var Head = \"init\";\n    var Matrix;\n    \n    const setData = (string) => {\n        STRING = string;\n    } //allow calling following methods without params\n\n    const getHead = (string=STRING) => {\n        Head = string.split(\"\\n\")[0].split(/(\\s+)/).filter(e => e.trim().length>0);\n        return Head;\n    };\n\n    const getBody = (string=STRING) => {\n        // matrix without state values \n        var body = string.split(\"\\n\").slice(1);\n        var temp=[]\n        for(let i=0; i<body.length; i++){\n            temp.push(body[i].split(/(\\s+)/).filter(e => e.trim().length>0));\n        }\n        Matrix = temp;\n        return temp;\n    }\n\n    const query = (head=Head, matrix=Matrix, queryString) => {\n        // returns an array with the correct variable\n        var var_index = head.indexOf(queryString);\n        if(var_index === -1){\n            console.log(\"bad query\");\n            return;\n        }\n\n        var temp =[];\n        for(let i=0; i<matrix.length; i++){\n            temp.push(matrix[i][var_index])\n        }\n        return temp;\n    }\n\n    return {    \n        getHead,\n        getBody,\n        setData,\n        query,\n    }\n}\n\nmodule.exports = Processor;"],"sourceRoot":""}